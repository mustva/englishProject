@using englishProject.Models
@model englishProject.Models.SynonymWord

    @{
        ViewBag.Title = "Update";
        Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    }

    <h2>Update</h2>

    @using (Html.BeginForm("UpdateSynonymWord", "SynonymWord", FormMethod.Post))
    {

        <div class="form-horizontal">
            <h4>Word</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.synonymId)

            <div class="form-group">
                @Html.LabelFor(model => model.synonymTurkish, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.synonymTurkish, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.synonymTurkish, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.synonym1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.synonym1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.synonym1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.synonym2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.synonym2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.synonym2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.synonym3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.synonym3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.synonym3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Level.levelId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("levelId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Level.levelId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>